代码参见 ThreadTest.h、WindowsThreadTest.h

c++11引入的多线程类和windows的多线程类用法很相似，但是有区别看代码便知
C++11中引入了一个用于多线程操作的thread类，简单多线程示例：
C++11标准在标准库中为多线程提供了组件，这意味着使用C++编写与平台无关的多线程程序成为可能，而C++程序的可移植性也得到了有力的保证。另外，并发编程可提高应用的性能，这对对性能锱铢必较的C++程序员来说是值得关注的。
两个子线程并行执行，join函数会阻塞主流程，所以子线程都执行完成之后才继续执行主线程。可以使用detach将子线程从主流程中分离，独立运行，不会阻塞主线程：
使用detach的主线程和两个子线程并行执行。

多线程数据竞争
多个线程同时对同一变量进行操作的时候，如果不对变量做一些保护处理，有可能导致处理结果异常：

使用线程互斥对象mutex保持数据同步。
mutex类的使用需要包含头文件mutex：使用后锁定中的数据无法被其他线程所改变











